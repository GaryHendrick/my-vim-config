§ =============================================================
§  Comments
§ =============================================================

§ -------------------------------------------------------------
§  frames, descriptions
§ -------------------------------------------------------------

== Comments.end-of-line-comment == append, nomenu ==
// <CURSOR>
== Comments.frame == map:cfr, shortcut:f  ==
//-----------------------------------------------------------------------------
//  <CURSOR>
//-----------------------------------------------------------------------------
== Comments.function == map:cfu, shortcut:f  ==
// ===  FUNCTION  ======================================================================
//         Name:  |?FUNCTION_NAME|
//  Description:  <CURSOR>
// =====================================================================================
== Comments.method == map:cme, shortcut:m  ==
//--------------------------------------------------------------------------------------
//       Class:  |?CLASSNAME|
//      Method:  |?CLASSNAME| :: |?METHODNAME|
// Description:  <CURSOR>
//--------------------------------------------------------------------------------------
== Comments.class == map:ccl, shortcut:c  ==
// =====================================================================================
//        Class:  |?CLASSNAME|
//  Description:  <CURSOR>
// =====================================================================================
== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  files, sections
§ -------------------------------------------------------------

== SEP: Comments.sep_file ==

== Comments.file description impl == map:cfdi, shortcut:c, start, noindent ==
// =====================================================================================
//
//       Filename:  |FILENAME|
//
//    Description:  <CURSOR>
//
//        Version:  1.0
//        Created:  |DATE| |TIME|
//       Revision:  none
//       Compiler:  g++
//        License:	|LICENSE|
//         Author:  |AUTHOR| |EMAIL|
//   Organization:  |ORGANIZATION|
//
// =====================================================================================
//  Copyright |YEAR| |COPYRIGHT_HOLDER|
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy of
//  this software and associated documentation files (the "Software"), to deal in
//  the Software without restriction, including without limitation the rights to
//  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
//  of the Software, and to permit persons to whom the Software is furnished to do
//  so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
== Comments.file description header == map:cfdh, shortcut:h, start, noindent ==
// =====================================================================================
//
//       Filename:  |FILENAME|
//
//    Description:  <CURSOR>
//
//        Version:  1.0
//        Created:  |DATE| |TIME|
//       Revision:  none
//       Compiler:  g++
//        License:	|LICENSE|
//         Author:  |AUTHOR| |EMAIL|
//   Organization:  |ORGANIZATION|
//
// =====================================================================================
//  Copyright |YEAR| |COPYRIGHT_HOLDER|
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy of
//  this software and associated documentation files (the "Software"), to deal in
//  the Software without restriction, including without limitation the rights to
//  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
//  of the Software, and to permit persons to whom the Software is furnished to do
//  so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
== ENDTEMPLATE ==

== LIST: comments_c_sections == hash ==
  'HEADER FILE INCLUDES'        : 'HEADER FILE INCLUDES   ###############################', 
  'LOCAL MACROS'                : 'MACROS  -  LOCAL TO THIS SOURCE FILE   ###############', 
  'LOCAL TYPE DEFINITIONS'      : 'TYPE DEFINITIONS  -  LOCAL TO THIS SOURCE FILE   #####', 
  'LOCAL DATA TYPES'            : 'DATA TYPES  -  LOCAL TO THIS SOURCE FILE   ###########', 
  'LOCAL VARIABLES'             : 'VARIABLES  -  LOCAL TO THIS SOURCE FILE   ############', 
  'LOCAL PROTOTYPES'            : 'PROTOTYPES  -  LOCAL TO THIS SOURCE FILE   ###########', 
  'EXP.  FUNCTION DEFINITIONS'  : 'FUNCTION DEFINITIONS  -  EXPORTED FUNCTIONS   ########', 
  'LOCAL FUNCTION DEFINITIONS'  : 'FUNCTION DEFINITIONS  -  LOCAL TO THIS SOURCE FILE   #', 
  'LOCAL CLASS DEFINITIONS'     : 'CLASS DEFINITIONS  -  LOCAL TO THIS SOURCE FILE   ####', 
  'EXP.  CLASS IMPLEMENTATIONS' : 'CLASS IMPLEMENTATIONS  -  EXPORTED CLASSES   #########', 
  'LOCAL CLASS IMPLEMENTATIONS' : 'CLASS IMPLEMENTATIONS  -  LOCAL CLASSES   ############', 
== LIST: comments_h_sections == hash ==
  'HEADER FILE INCLUDES'           : 'HEADER FILE INCLUDES   ###########', 
  'EXPORTED MACROS'                : 'EXPORTED MACROS   ################', 
  'EXPORTED TYPE DEFINITIONS'      : 'EXPORTED TYPE DEFINITIONS   ######', 
  'EXPORTED DATA TYPES'            : 'EXPORTED DATA TYPES   ############', 
  'EXPORTED CLASS DEFINITIONS'     : 'EXPORTED CLASS DEFINITIONS   #####', 
  'EXPORTED VARIABLES'             : 'EXPORTED VARIABLES   #############', 
  'EXPORTED FUNCTION DECLARATIONS' : 'EXPORTED FUNCTION DECLARATIONS   #', 
== LIST: comments_keywords == hash ==
  'BUG'         : ':BUG:|DATE| |TIME|::',
  'COMPILER'    : ':COMPILER:|DATE| |TIME|::',
  'REMARK'      : ':REMARK:|DATE| |TIME|::',
  'TODO'        : ':TODO:|DATE| |TIME|::',
  'WARNING'     : ':WARNING:|DATE| |TIME|::',
  'WORKAROUND'  : ':WORKAROUND:|DATE| |TIME|::',
  'new keyword' : ':{+NEW_KEYWORD+}:|DATE| |TIME|::',
== LIST: comments_special == list ==
  'EMPTY'                         , 
  'FALL THROUGH'                  , 
  'IMPLICIT TYPE CONVERSION'      , 
  'NO RETURN'                     , 
  'NOT REACHED'                   , 
  'TO BE IMPLEMENTED'             , 
  'constant type is long'         , 
  'constant type is unsigned'     , 
  'constant type is unsigned long', 
== LIST: comments_macros == list ==
  'AUTHOR'      , 
  'AUTHORREF'   , 
  'COMPANY'     , 
  'COPYRIGHT'   , 
  'EMAIL'       , 
  'ORGANIZATION', 
== ENDLIST ==

== Comments.C file sections  == expandmenu, append, map:ccs, shortcut:s ==
|PickList( 'C file sections', 'comments_c_sections' )|
// #####   |PICK|####################<CURSOR>
== Comments.H file sections  == expandmenu, append, map:chs, shortcut:s ==
|PickList( 'H file sections', 'comments_h_sections' )|
// #####   |PICK|########################################<CURSOR>
== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  keywords, special and macros
§  date and time
§ -------------------------------------------------------------

== SEP: Comments.sep_develop ==

== Comments.keyword comments == expandmenu, append, map:ckc, shortcut:k ==
|PickList( 'keyword comments', 'comments_keywords' )|
 // |PICK| <CURSOR>
== Comments.special comments == expandmenu, append, map:csc, shortcut:s ==
|PickList( 'special comments', 'comments_special' )|
 // |PICK|<CURSOR>
== Comments.macros == expandmenu, insert, map:cma, shortcut:m ==
|PickList( 'macro', 'comments_macros' )|
||PICK||<CURSOR>
== Comments.date == insert, map:cd, shortcut:d ==
|DATE|<CURSOR>
== Comments.date time == insert, map:ct, shortcut:t ==
|DATE| |TIME|<CURSOR>
== ENDTEMPLATE ==
